{"version":3,"sources":["components/validate/index.tsx"],"names":[],"mappings":"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","file":"../../../assets/components/validate/index.js","sourcesContent":["import * as React from 'react';\r\nimport Input from '../input/index';\r\nimport Popover from '../popover/index';\r\nimport InputNumber from '../input-number/index';\r\nimport { InputProps } from 'antd/lib/input/Input';\r\n\r\n/**\r\n* 获取字符串长度 中文 = 2 英文 = 1\r\n*/\r\nexport function getLength(value: string): number {\r\n    return value.replace(/[^\\x00-\\xff]/g, \"01\").length / 2;\r\n};\r\n\r\nlet messages = {\r\n    required: \"必填!\"\r\n}\r\n\r\n\r\nlet regExpArray = {\r\n    required:  /^\\s*$/g,\r\n}\r\n\r\n\r\ninterface RuleFunction {\r\n    (value, parameter): boolean\r\n};\r\n\r\nlet ruleArray: { [key: string]: RuleFunction } = {\r\n    required: (value) => {\r\n        return value != \"\" && !regExpArray.required.test(value);\r\n    }\r\n}\r\n\r\n\r\ninterface IValidateProps extends InputProps {\r\n    required?: boolean\r\n    min?: number,\r\n    max?: number\r\n};\r\ninterface IValidateState {\r\n    msg: string[],\r\n    validate: boolean\r\n};\r\n\r\n\r\nclass Validate extends React.Component<IValidateProps, IValidateState> {\r\n\r\n    state = {\r\n        msg: [],\r\n        validate: true\r\n    }\r\n\r\n    validate(e) {\r\n        let value = e.target.value;\r\n        let state = this.state;\r\n        state.msg = [];\r\n        state.validate = true;\r\n\r\n        if (this.props.required) {\r\n            let validate = this.valueValidate('required', value);\r\n            state.validate = state.validate && validate;\r\n            validate || state.msg.push(messages['required']);\r\n            this.setState(this.state);\r\n            return;\r\n        }\r\n\r\n        this.setState(this.state);\r\n    }\r\n\r\n\r\n    msgRender() {\r\n        return <div>{\r\n            this.state.msg.map((value, index) => <p key={index}>{value}</p>)\r\n        }</div>;\r\n    }\r\n\r\n    valueValidate(type: string, value) {\r\n        let parameter = this.props[type],\r\n            rule = ruleArray[type],\r\n            msg = messages[type];\r\n        return rule(value, parameter);\r\n    }\r\n\r\n\r\n    public render(): JSX.Element {\r\n        let {props} = this;\r\n        return (<Popover overlayClassName='ant-popover-warning' placement=\"topLeft\" content={this.msgRender()} visible={!this.state.validate}>\r\n            {\r\n                (props.max || props.min) ?\r\n                    <InputNumber min={props.min} max={props.max} defaultValue={3} onBlur={this.validate.bind(this)} /> :\r\n                    <Input {...this.props} onBlur={this.validate.bind(this)} />\r\n            }\r\n        </Popover >);\r\n    }\r\n}\r\n\r\nexport default Validate;\r\n"]}