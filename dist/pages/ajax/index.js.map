{"version":3,"sources":["pages/ajax/index.tsx"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import * as React from 'react';\r\nimport { get, post } from '../../components/ajax/index';\r\nimport Button from '../../components/button/index';\r\n\r\n\r\n/**\r\n * ajax demo\r\n * \r\n * @export\r\n * @class Component\r\n * @extends {React.Component<any, any>}\r\n */\r\nexport default class Component extends React.PureComponent<any, any> {\r\n\r\n    /**\r\n     * 状态保存log\r\n     * \r\n     * \r\n     * @memberOf Component\r\n     */\r\n    state = {\r\n        text: []\r\n    }\r\n\r\n    /**\r\n     * log输出\r\n     * \r\n     * @param {any} msg\r\n     * \r\n     * @memberOf Component\r\n     */\r\n    log(msg) {\r\n        this.state.text.push(msg);\r\n        this.setState(this.state);\r\n    }\r\n\r\n    /**\r\n     * 第一个按钮\r\n     * \r\n     * \r\n     * @memberOf Component\r\n     */\r\n    async getAjax() {\r\n        this.log('默认400毫秒只能调用一次');\r\n        this.log('调用第一次');\r\n        /**\r\n         * \r\n         * \r\n         * @param {any} res\r\n         */\r\n        let res = get('assets/components/nav/index.tsx').then(res => {\r\n            this.log('调用第一次成功');\r\n            this.log('-------');\r\n        });\r\n\r\n        this.log('调用第二次');\r\n        get('assets/components/nav/index.tsx').then(res => {\r\n            this.setState(this.state);\r\n            this.log('调用第二次成功');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 第二个按钮\r\n     * 当按钮点击事件 返回的是 Promise 会有个loading\r\n     * @returns\r\n     * \r\n     * @memberOf Component\r\n     */\r\n    async getAjax1() {\r\n        this.log('缓存');\r\n        this.log('调用第一次');\r\n        let res = await get('assets/components/nav/index.tsx', null, 1)\r\n        this.log('调用第一次成功');\r\n        this.log('调用第二次');\r\n        return get('assets/components/nav/index.tsx', null, 1).then(res => {\r\n            this.log('调用第二次成功');\r\n            this.log('-------');\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * 第三个按钮 \r\n     * 当按钮点击事件 返回的是 Promise 会有个loading\r\n     * @returns\r\n     * \r\n     * @memberOf Component\r\n     */\r\n    async getAjax2() {\r\n        this.log('延迟提交 400ms 只提交最后一次ajax');\r\n        this.log('调用第一次');\r\n        /**\r\n         * \r\n         * \r\n         * @param {any} res\r\n         */\r\n        let res = get('assets/components/nav/index.tsx', null, 2).then(res => {\r\n            this.log('调用第一次成功');\r\n        });\r\n        this.log('调用第二次');\r\n        return get('assets/components/nav/index.tsx', null, 2).then(res => {\r\n            this.log('调用第二次成功');\r\n            this.log('-------');\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * 渲染\r\n     * \r\n     * @returns\r\n     * \r\n     * @memberOf Component\r\n     */\r\n    render() {\r\n        return <section className='page-home'>\r\n            <h2>简单例子55</h2>\r\n            <div>\r\n                <Button onClick={this.getAjax.bind(this)}>get1</Button>\r\n                <Button onClick={this.getAjax1.bind(this)}>get2</Button>\r\n                <Button onClick={this.getAjax2.bind(this)}>get3</Button>\r\n            </div>\r\n            {this.state.text.map((value, index) => {\r\n                return <p key={index}>{value}</p>;\r\n            })}\r\n        </section>\r\n    }\r\n}\r\n\r\n"],"sourceRoot":"/assets"}