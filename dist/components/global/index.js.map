{"version":3,"sources":["components/global/index.tsx"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport {\r\n    HashRouter as Router,\r\n    Route,\r\n    Link,\r\n    Redirect,\r\n    Switch,\r\n    RouteComponentProps\r\n} from 'react-router-dom';\r\n\r\nimport Nav from '../nav/index';\r\nimport { Provider, connect } from 'react-redux';\r\nimport { Store, createStore, Dispatch, combineReducers } from 'redux';\r\nimport { autobind } from 'core-decorators';\r\nimport { Spin } from '../antd/index';\r\n\r\ndeclare let require: any;\r\n\r\n// 缓存页面数据\r\nlet saveState = {};\r\n// acitons 列表\r\nlet acitonsList: { [key: string]: any } = {};\r\n/**\r\n * 获取strie\r\n * \r\n * @returns\r\n */\r\nfunction getStore() {\r\n    const rootReducer = combineReducers(acitonsList);\r\n    const store: Store<any> = createStore(rootReducer, saveState);\r\n    return store;\r\n}\r\n\r\ninterface IRequireEnsureProps { url: string, router: RouteComponentProps<any> };\r\ninterface IRequireEnsureState { };\r\n@autobind\r\nclass RequireEnsure extends React.Component<IRequireEnsureProps, IRequireEnsureState> {\r\n    state = {\r\n        page: <div></div>,\r\n        loading: true\r\n    }\r\n\r\n    async requireEnsure(url) {\r\n        // <debug>\r\n        // 此行会在发布中删除\r\n        console.log(url);\r\n        // </debug>\r\n\r\n        this.state.loading = true;\r\n        this.setState(this.state);\r\n\r\n        let path = this.props.router.match.path;\r\n        let obj = await require.ensure(url);\r\n        // 获取页面\r\n        let Page = obj['default'];\r\n        // 获取reducer\r\n        acitonsList[path] = obj['reducer'];\r\n        const store: Store<any> = getStore();\r\n        const mapStateToProps: any = state => {\r\n            // 保存每个页面的state\r\n            saveState = state;\r\n            return ({\r\n                data: state[path]\r\n            })\r\n        };\r\n\r\n        // 提取data\r\n        let App = connect(mapStateToProps)(Page) as typeof Page;\r\n        this.state.page = <Provider store={store}>\r\n            <App router={this.props.router} store={store} />\r\n        </Provider>;\r\n        this.state.loading = false;\r\n        this.setState(this.state);\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        let { props, state } = this;\r\n        return state.loading ? <div style={{ textAlign: 'center', paddingTop: '100px' }}><Spin /></div> : state.page;\r\n    }\r\n\r\n    /**\r\n     * 重加载\r\n     * \r\n     * @param {any} url\r\n     * @returns\r\n     * \r\n     * @memberOf RequireEnsure\r\n     */\r\n    async reload(url) {\r\n        if (url === 'dist/index.js') {\r\n            window.location.reload();\r\n            return;\r\n        }\r\n        let bl = await window['axibaModular'].reload(url);\r\n        if (bl) {\r\n            if (url !== this.props.url) {\r\n                await window['axibaModular'].reload(this.props.url);\r\n            }\r\n            this.requireEnsure(this.props.url);\r\n        }\r\n    }\r\n\r\n    componentWillUpdate(nextProps) {\r\n        if (nextProps.url !== this.props.url) {\r\n            // 渲染完毕再改变 不然this.props.router.match.path值不对\r\n            setTimeout(() => {\r\n                this.requireEnsure(nextProps.url);\r\n            }, 0);\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.requireEnsure(this.props.url);\r\n        window['__reload'] = this.reload;\r\n    }\r\n}\r\n\r\n\r\nexport default class AppRouter extends React.Component<any, any> {\r\n\r\n    requireEnsure(url) {\r\n        return (props: RouteComponentProps<any>) => <RequireEnsure url={url} router={props} />\r\n    }\r\n\r\n    render() {\r\n        let requireEnsure = this.requireEnsure;\r\n        return (\r\n            <Router>\r\n                <section className='h100'>\r\n                    <Nav />\r\n                    <Switch>\r\n                        <Route exact path=\"/\" render={requireEnsure('pages/react/index.js')} />\r\n                        <Route path=\"/test\" render={requireEnsure('pages/test/index.js')} />\r\n                        <Route path=\"/antd\" render={requireEnsure('pages/antd/index.js')} />\r\n                        <Route render={requireEnsure('pages/error/index.js')} />\r\n                    </Switch>\r\n                </section>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <AppRouter />,\r\n    document.getElementById('app')\r\n);\r\n\r\n"],"sourceRoot":"/assets"}