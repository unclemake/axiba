{"version":3,"sources":["components/validate/index.js","components/validate/index.tsx"],"names":["React","require","index_1","rule_1","exports","addRule","getLength","index_2","Validate","arguments","state","msg","validate","value","props","e","target","replaceDefault","required","valueValidateSave","setState","hiddenPopover","valueValidate","key","messages","hasOwnProperty","valueReplace","clearTimeout","hiddenST","setTimeout","replaceFunction","replaceArray","createElement","map","index","type","parameter","rule","ruleArray","ruleDefault","push","default","overlayClassName","placement","content","msgRender","visible","onChange","bind","onBlur","Component","Object","defineProperty"],"mappings":"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","file":"components/validate/index.js","sourcesContent":["\"use strict\";\nconst React = require('react');\nconst index_1 = require('../input/index');\nconst rule_1 = require('./rule');\nexports.addRule = rule_1.addRule;\nexports.getLength = rule_1.getLength;\nconst index_2 = require('../popover/index');\n;\n;\n/**\n * 验证类\n *\n * @class Validate\n * @extends {React.Component<IValidateProps, IValidateState>}\n */\nclass Validate extends React.Component {\n    constructor() {\n        super(...arguments);\n        /**\n         * 状态\n         *\n         * @memberOf Validate\n         */\n        this.state = {\n            msg: [],\n            validate: true,\n            value: this.props.value\n        };\n    }\n    /**\n     * 验证事件\n     *\n     * @private\n     * @param {any} e\n     * @returns\n     *\n     * @memberOf Validate\n     */\n    validate(e) {\n        let value = e.target.value;\n        let state = this.state;\n        state.msg = [];\n        state.validate = true;\n        //去除前后空格\n        state.value = rule_1.replaceDefault(value);\n        if (this.props.required) {\n            let validate = this.valueValidateSave('required', value);\n            this.setState(this.state);\n            this.hiddenPopover();\n            if (!validate) {\n                return;\n            }\n        }\n        else {\n            let validate = this.valueValidate('required', value);\n            if (!validate) {\n                return;\n            }\n        }\n        for (let key in this.props) {\n            if (rule_1.messages.hasOwnProperty(key)) {\n                state.value = this.valueReplace(key, value);\n                let validate = this.valueValidateSave(key, value);\n            }\n        }\n        this.setState(this.state);\n        this.hiddenPopover();\n    }\n    /**\n     * 定时隐藏提示框\n     *\n     * @private\n     *\n     * @memberOf Validate\n     */\n    hiddenPopover() {\n        clearTimeout(this.hiddenST);\n        this.hiddenST = setTimeout(() => {\n            this.state.validate = true;\n            this.setState(this.state);\n        }, 4500);\n    }\n    /**\n     * 输入值 替换\n     *\n     * @private\n     * @param {any} key\n     * @param {any} value\n     * @returns\n     *\n     * @memberOf Validate\n     */\n    valueReplace(key, value) {\n        let replaceFunction = rule_1.replaceArray[key];\n        if (replaceFunction) {\n            return replaceFunction(value);\n        }\n        else {\n            return value;\n        }\n    }\n    /**\n     * 验证信息渲染\n     *\n     * @returns\n     *\n     * @memberOf Validate\n     */\n    msgRender() {\n        return React.createElement(\"div\", null, this.state.msg.map((value, index) => React.createElement(\"p\", {key: index}, value)));\n    }\n    /**\n     * 验证\n     *\n     * @param {string} type 验证类型\n     * @param {string} value 验证值\n     * @returns\n     *\n     * @memberOf Validate\n     */\n    valueValidate(type, value) {\n        let state = this.state, parameter = this.props[type], rule = rule_1.ruleArray[type] || rule_1.ruleDefault(type), validate = rule(value, parameter);\n        return validate;\n    }\n    /**\n     * 验证 --> 保存验证\n     *\n     * @param {string} type\n     * @param {string} value\n     * @returns\n     *\n     * @memberOf Validate\n     */\n    valueValidateSave(type, value) {\n        let state = this.state, msg = rule_1.messages[type], parameter = this.props[type], validate = this.valueValidate(type, value);\n        state.validate = state.validate && validate;\n        validate || state.msg.push(msg(value, parameter));\n        return validate;\n    }\n    onChange(e) {\n        this.state.value = e.target.value;\n        this.setState(this.state);\n    }\n    /**\n     * 渲染\n     *\n     * @returns {JSX.Element}\n     *\n     * @memberOf Validate\n     */\n    render() {\n        let { props } = this;\n        return (React.createElement(index_2.default, {overlayClassName: 'ant-popover-warning', placement: \"topLeft\", content: this.msgRender(), visible: !this.state.validate}, React.createElement(index_1.default, {value: this.state.value, onChange: this.onChange.bind(this), onBlur: this.validate.bind(this)})));\n    }\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Validate;",null],"sourceRoot":"/assets"}