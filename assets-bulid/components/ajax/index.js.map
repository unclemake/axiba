{"version":3,"sources":["components/ajax/index.js","components/ajax/index.ts"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","throw","result","done","then","apply","superagent","require","index_1","config_1","get","url","data","type","exports","ajax","post","put","del","ajaxRecordArray","stTime","typeFunctionArray","ajaxType","ajaxRecord","ajaxRecordGet","find","time","getTime","filter","reslove","responseDate","response","on","clearTimeout","setTimeout","indexOf","requestUrl","ajaxRequest","Date","delete","send","unshift","typeFunctionValue","promiseFunction","end","error","res","message","description","JSON","parse","text","status"],"mappings":"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","file":"components/ajax/index.js","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments)).next());\n    });\n};\nconst superagent = require('superagent');\nconst index_1 = require('../notification/index');\nconst config_1 = require('../global/config');\n/**\n * get 请求\n *\n * @export\n * @param {string} url\n * @param {{ [key: string]: any }} [data]\n * @param {number} [type]\n * @returns\n */\nfunction get(url, data, type) {\n    return exports.ajax(url, data, type, 'get');\n}\nexports.get = get;\n/**\n * post 请求\n *\n * @export\n * @param {string} url\n * @param {{ [key: string]: any }} [data]\n * @param {number} [type]\n * @returns\n */\nfunction post(url, data, type) {\n    return exports.ajax(url, data, type, 'post');\n}\nexports.post = post;\n/**\n * put 请求\n *\n * @export\n * @param {string} url\n * @param {{ [key: string]: any }} [data]\n * @param {number} [type]\n * @returns\n */\nfunction put(url, data, type) {\n    return exports.ajax(url, data, type, 'put');\n}\nexports.put = put;\n/**\n * del 请求\n *\n * @export\n * @param {string} url\n * @param {{ [key: string]: any }} [data]\n * @param {number} [type]\n * @returns\n */\nfunction del(url, data, type) {\n    return exports.ajax(url, data, type, 'delete');\n}\nexports.del = del;\n/**\n * ajax 记录\n */\nlet ajaxRecordArray = [];\n/**\n *  ajaxType3 延迟时间\n */\nlet stTime = 400;\n/**\n * ajaxType 函数集合\n * 0. 同url同参数同类型 上一个完成时过 400ms 才能请求下一个\n * 1. 缓存请求返回值\n * 2. 延迟提交 400ms 同一时间400ms内的相同请求 只会请求最后一个请求\n */\nlet typeFunctionArray = [\n    // 同url同参数同类型 上一个完成时过 400ms 才能请求下一个\n        (url, data, type, ajaxType, ajaxRecord) => {\n        let ajaxRecordGet = ajaxRecordArray.find(value => {\n            return value != ajaxRecord &&\n                value.url === url &&\n                value.data === data &&\n                value.ajaxType === ajaxType &&\n                ajaxRecord.time.getTime() - value.time.getTime() < 400;\n        });\n        if (ajaxRecordGet) {\n            ajaxRecordArray = ajaxRecordArray.filter(value => value != ajaxRecord);\n            //不返回\n            return new Promise(() => { });\n        }\n    },\n    //缓存请求返回值\n        (url, data, type, ajaxType, ajaxRecord) => {\n        return new Promise((reslove, reject) => {\n            /**\n             *\n             *\n             * @param {any} value\n             * @returns\n             */\n            var ajaxRecordGet = ajaxRecordArray.find(value => {\n                return value != ajaxRecord &&\n                    value.url === url &&\n                    value.data === data &&\n                    value.ajaxType === ajaxType;\n            });\n            if (ajaxRecordGet) {\n                ajaxRecordArray = ajaxRecordArray.filter(value => value != ajaxRecord);\n                if (ajaxRecordGet.responseDate) {\n                    return reslove(ajaxRecordGet.responseDate);\n                }\n                else {\n                    ajaxRecordGet.response.on('end', () => {\n                        reslove(ajaxRecordGet.responseDate);\n                    });\n                }\n            }\n            reslove();\n        });\n    },\n    //延迟提交 400ms 同一时间400ms内的相同请求 只会请求最后一个请求\n        (url, data, type, ajaxType, ajaxRecord) => {\n        return new Promise((reslove, reject) => {\n            let ajaxRecordGet = ajaxRecordArray.find(value => {\n                return value != ajaxRecord &&\n                    value.url === url &&\n                    value.data === data &&\n                    value.ajaxType === ajaxType &&\n                    ajaxRecord.time.getTime() - value.time.getTime() < 400;\n            });\n            if (ajaxRecordGet) {\n                clearTimeout(ajaxRecordGet.setTimeout);\n            }\n            ajaxRecord.setTimeout = setTimeout(function () {\n                reslove();\n            }, stTime);\n        });\n    }\n];\nexports.ajax = (url, data, type = 0, ajaxType = 'get') => __awaiter(this, void 0, void 0, function* () {\n    //统一添加请求路径\n    if (url.indexOf('http') != 0) {\n        url = config_1.ajax.requestUrl + url;\n    }\n    let ajaxRequest;\n    let ajaxRecord = {\n        url,\n        time: new Date(),\n        data,\n        type,\n        ajaxType\n    };\n    //创建请求\n    switch (ajaxType) {\n        case 'delete':\n            ajaxRequest = superagent.delete(url);\n            break;\n        case 'put':\n            ajaxRequest = superagent.put(url);\n            break;\n        case 'get':\n            ajaxRequest = superagent.get(url);\n            break;\n        case 'post':\n            ajaxRequest = superagent.post(url);\n            break;\n    }\n    //创建请求数据\n    if (data) {\n        ajaxRequest = ajaxRequest.send(data);\n    }\n    //添加请求记录 反向添加\n    ajaxRecordArray.unshift(ajaxRecord);\n    let typeFunctionValue = yield typeFunctionArray[type](url, data, type, ajaxType, ajaxRecord);\n    if (typeFunctionValue) {\n        return typeFunctionValue;\n    }\n    let promiseFunction = (reslove, reject) => {\n        //发送请求\n        ajaxRequest.end((error, res) => {\n            ajaxRecord.response = res;\n            if (error) {\n                index_1.error({\n                    message: `请求错误!`,\n                    description: 'status:${res.status}'\n                });\n                reject(ajaxRecord.responseDate);\n            }\n            else {\n                try {\n                    ajaxRecord.responseDate = JSON.parse(res.text);\n                }\n                catch (error) {\n                    ajaxRecord.responseDate = {\n                        status: 0,\n                        data: res.text,\n                        message: ''\n                    };\n                }\n                reslove(ajaxRecord.responseDate);\n            }\n        });\n    };\n    return new Promise(promiseFunction);\n});",null],"sourceRoot":"/assets"}