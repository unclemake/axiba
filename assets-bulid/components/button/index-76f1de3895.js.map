{"version":3,"sources":["components/button/index.js","components/button/index.tsx"],"names":["React","require","index_1","Button","exports","SpinC","default","Component","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","apply","arguments","state","loading","e","onClickBack","props","onClick","self","then","setState","arg","createElement","spinning","size","style","display","bind","children","defineProperty","value"],"mappings":";AAAA,43BCAYA,MAAKC,QAAM,QACvBA,SAAO,iCAEP,IAAAC,SAAAD,QAAiB,iBACbE,OAAsBF,QAAQ,wBACzBG,SAAAD,OAAMA,MACf,IAAIE,OAAQH,QAAAI,QACZC,sBAAA,QAAAA,KAAAC,gBAAAC,KAAAF,EAAA,IAAAG,GAAAC,2BAAAF,MAAAF,EAAAK,WAAAC,OAAAC,eAAAP,IAAAQ,MAAAN,KAAuCO,WAAvC,OAEIN,GAAAO,OACIC,SAAS,GAHjBR,sEAMYS,GACJ,GAAIC,GAAmBX,KAAKY,MAAMC,QAAQH,GACtCI,EAAOd,IACX,OAAIW,IAAeA,EAAYI,MAC3BD,EAAKN,MAAMC,SAAU,EACrBK,EAAKE,SAASF,EAAKN,OAEZG,EAAYI,KAAK,SAAUE,GAG9B,MAFAH,GAAKN,MAAMC,SAAU,EACrBK,EAAKE,SAASF,EAAKN,OACZS,GACR,SAAUA,GAGT,MAFAH,GAAKN,MAAMC,SAAU,EACrBK,EAAKE,SAASF,EAAKN,OACZS,KAGJN,mCAKX,MAAQpB,OAAA2B,cAACtB,OAAMuB,SAAUnB,KAAKQ,MAAMC,QAASW,KAAK,QAAQC,OAASC,QAAS,iBACxE/B,MAAA2B,cAACxB,QAAOmB,QAASb,KAAKY,MAAMC,QAAUb,KAAKa,QAAQU,KAAKvB,MAAQ,cAC3DA,KAAKY,MAAMY,kBA9BWjC,MAAMO,UAA7CM,QAAAqB,eAAA9B,QAAA,cAAA+B,OAAA,IAegBZ,QAAAA,QAAAA","file":"components/button/index-76f1de3895.js","sourcesContent":["\"use strict\";\nconst React = require('react');\nrequire('../antd/button/style/index.css');\nconst index_1 = require('../spin/index');\nlet Button = require('antd/lib/button/index');\nexports.Button = Button;\nlet SpinC = index_1.default;\nclass Component extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            loading: false\n        };\n    }\n    onClick(e) {\n        let onClickBack = this.props.onClick(e);\n        let self = this;\n        if (onClickBack && onClickBack.then) {\n            self.state.loading = true;\n            self.setState(self.state);\n            return onClickBack.then(function (arg) {\n                self.state.loading = false;\n                self.setState(self.state);\n                return arg;\n            }, function (arg) {\n                self.state.loading = false;\n                self.setState(self.state);\n                return arg;\n            });\n        }\n        else {\n            return onClickBack;\n        }\n    }\n    render() {\n        return (React.createElement(SpinC, {spinning: this.state.loading, size: \"small\", style: { display: 'inline-block' }}, \n            React.createElement(Button, {onClick: this.props.onClick ? this.onClick.bind(this) : () => { }}, this.props.children)\n        ));\n    }\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Component;",null],"sourceRoot":"/assets"}