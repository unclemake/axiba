{"version":3,"sources":["components/button/index.js","components/button/index.tsx"],"names":["React","require","index_1","Button","exports","SpinC","default","Component","arguments","state","loading","e","onClickBack","props","onClick","self","then","setState","arg","createElement","spinning","size","style","display","bind","children","Object","defineProperty","value"],"mappings":";AAAA;;;;;;;;;;ACAA,IAAYA,QAAKC,QAAM,OAAN,CAAjB;AACAA,QAAO,gCAAP;AAEA,IAAAC,UAAAD,QAAiB,eAAjB,CAAA;AACA,IAAIE,SAAsBF,QAAQ,uBAAR,CAA1B;AACSG,QAAAD,MAAA,GAAMA,MAAN;AACT,IAAIE,QAAQH,QAAAI,OAAZ;;IACAC,S;;;AAAA,yBAAA;AAAA;;AAAA,2HAAuCC,SAAvC;;AAEI,cAAAC,KAAA,GAAQ;AACJC,qBAAS;AADL,SAAR;AAFJ;AAkCC;;;;gCA5BWC,C,EAAC;AACL,gBAAIC,cAAmB,KAAKC,KAAL,CAAWC,OAAX,CAAmBH,CAAnB,CAAvB;AACA,gBAAII,OAAO,IAAX;AACA,gBAAIH,eAAeA,YAAYI,IAA/B,EAAqC;AACjCD,qBAAKN,KAAL,CAAWC,OAAX,GAAqB,IAArB;AACAK,qBAAKE,QAAL,CAAcF,KAAKN,KAAnB;AAEA,uBAAOG,YAAYI,IAAZ,CAAiB,UAAUE,GAAV,EAAa;AACjCH,yBAAKN,KAAL,CAAWC,OAAX,GAAqB,KAArB;AACAK,yBAAKE,QAAL,CAAcF,KAAKN,KAAnB;AACA,2BAAOS,GAAP;AACH,iBAJM,EAIJ,UAAUA,GAAV,EAAa;AACZH,yBAAKN,KAAL,CAAWC,OAAX,GAAqB,KAArB;AACAK,yBAAKE,QAAL,CAAcF,KAAKN,KAAnB;AACA,2BAAOS,GAAP;AACH,iBARM,CAAP;AASH,aAbD,MAaO;AACH,uBAAON,WAAP;AACH;AACJ;;;iCAEK;AACF,mBAAQZ,MAAAmB,aAAA,CAACd,KAAD,EAAM,EAACe,UAAU,KAAKX,KAAL,CAAWC,OAAtB,EAA+BW,MAAK,OAApC,EAA4CC,OAAO,EAAEC,SAAS,cAAX,EAAnD,EAAN,EACJvB,MAAAmB,aAAA,CAAChB,MAAD,EAAO,EAACW,SAAS,KAAKD,KAAL,CAAWC,OAAX,GAAqB,KAAKA,OAAL,CAAaU,IAAb,CAAkB,IAAlB,CAArB,GAA+C,YAAA,CAAW,CAApE,EAAP,EACK,KAAKX,KAAL,CAAWY,QADhB,CADI,CAAR;AAKH;;;;EAjCkCzB,MAAMO,S;;AAA7CmB,OAAAC,cAAA,CAAAvB,OAAA,EAAA,YAAA,EAAA,EAAAwB,OAAA,IAAA,EAAA;ADkCAxB,QAAQE,OAAR,GAAkBC,SAAlB","file":"components/button/index.js","sourcesContent":["\"use strict\";\nconst React = require('react');\nrequire('../antd/button/style/index.css');\nconst index_1 = require('../spin/index');\nlet Button = require('antd/lib/button/index');\nexports.Button = Button;\nlet SpinC = index_1.default;\nclass Component extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            loading: false\n        };\n    }\n    onClick(e) {\n        let onClickBack = this.props.onClick(e);\n        let self = this;\n        if (onClickBack && onClickBack.then) {\n            self.state.loading = true;\n            self.setState(self.state);\n            return onClickBack.then(function (arg) {\n                self.state.loading = false;\n                self.setState(self.state);\n                return arg;\n            }, function (arg) {\n                self.state.loading = false;\n                self.setState(self.state);\n                return arg;\n            });\n        }\n        else {\n            return onClickBack;\n        }\n    }\n    render() {\n        return (React.createElement(SpinC, {spinning: this.state.loading, size: \"small\", style: { display: 'inline-block' }}, \n            React.createElement(Button, {onClick: this.props.onClick ? this.onClick.bind(this) : () => { }}, this.props.children)\n        ));\n    }\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Component;",null],"sourceRoot":"/assets"}