{"version":3,"sources":["pages/react/index.js","pages/react/index.tsx"],"names":["React","require","Component","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","apply","arguments","state","btnNu","btnText","component2","setState","_this2","createElement","className","onClick","btnClick","bind","changeProps","Component2","nu","type","defineProperty","exports","value","default","_this3","props","console","log"],"mappings":";AAAA,43BCAYA,MAAKC,QAAM,SAQvBC,sBAAA,QAAAA,KAAAC,gBAAAC,KAAAF,EAAA,IAAAG,GAAAC,2BAAAF,MAAAF,EAAAK,WAAAC,OAAAC,eAAAP,IAAAQ,MAAAN,KAAuCO,WAAvC,OAMIN,GAAAO,OACIC,MAAO,EACPC,QAAS,MACTC,WAAY,GATpBV,yEAkBQD,KAAKY,UACDH,MAAOT,KAAKQ,MAAMC,MAAQ,0CAY9BT,KAAKY,UACDD,WAAYX,KAAKQ,MAAMG,WAAa,qCAUtC,GAAAE,GAAAb,KACKQ,EAASR,KAATQ,KACP,OAAQZ,OAAAkB,cAAA,WAASC,UAAU,aACvBnB,MAAAkB,cAAA,IAAE,KAAC,eACHlB,MAAAkB,cAAA,MAAI,KACAlB,MAAAkB,cAAA,KAAGE,QAAShB,KAAKiB,SAASC,KAAKlB,OAAQQ,EAAME,QAAQ,IAAEF,EAAMC,OAAU,KACvEb,MAAAkB,cAAA,KAAGE,QAAS,WAAA,MAAMH,GAAKM,gBAAe,mBAE1CvB,MAAAkB,cAAA,KAAG,MACHlB,MAAAkB,cAAA,KAAG,MACHlB,MAAAkB,cAAA,KAAG,MACHlB,MAAAkB,cAAA,KAAG,MACHlB,MAAAkB,cAACM,YAAWC,GAAIrB,KAAKQ,MAAMG,WAAYW,KAAK,iBAtDjB1B,MAAME,UAA7CM,QAAAmB,eAAAC,QAAA,cAAAC,OAAA,IDwDAD,QAAQE,QAAU5B,aC8BlBsB,wBAAA,QAAAA,KAAArB,gBAAAC,KAAAoB,EAAA,IAAAO,GAAAzB,2BAAAF,MAAAoB,EAAAjB,WAAAC,OAAAC,eAAAe,IAAAd,MAAAN,KAAgCO,WAAhC,OAKIoB,GAAAnB,OACIC,MAAOkB,EAAKC,MAAMP,IAN1BM,yEAcQ3B,KAAKY,UACDH,MAAOT,KAAKQ,MAAMC,MAAQ,iDAY9BoB,QAAQC,IAAI,kEAUZD,QAAQC,IAAI,yEAWZD,QAAQC,IAAI,6EAYZ,MADAD,SAAQC,IAAI,0BACL,iDAUPD,QAAQC,IAAI,yDAOV,GACKtB,GAASR,KAATQ,KACP,OAAOZ,OAAAkB,cAAA,WAASC,UAAU,aACtBnB,MAAAkB,cAAA,IAAE,KAAC,wBACHlB,MAAAkB,cAAA,MAAI,KACAlB,MAAAkB,cAAA,SAAOQ,KAAK,SACZ1B,MAAAkB,cAAA,KAAGE,QAAShB,KAAKiB,SAASC,KAAKlB,MAAOe,UAAU,WAC5CnB,MAAAkB,cAAA,KAAGC,UAAU,6BACb,MAAIP,EAAMC,QAElBb,MAAAkB,cAAA,IAAE,KACE,eAAad,KAAK4B,MAAMP,YAxFRzB,MAAME,UAAzB0B,SAAAJ,WAAUA","file":"pages/react/index.js","sourcesContent":["\"use strict\";\nconst React = require('react');\n/**\n * react页面默认default 加载组件\n * @class Component\n * @extends {React.Component<any, any>}\n */\nclass Component extends React.Component {\n    constructor() {\n        super(...arguments);\n        /**\n         * 状态\n         * @memberOf Component\n         */\n        this.state = {\n            btnNu: 1,\n            btnText: '点击我',\n            component2: 1\n        };\n    }\n    /**\n     * 点击事件 函数\n     * @memberOf Component\n     */\n    btnClick() {\n        this.setState({\n            btnNu: this.state.btnNu + 1\n        });\n    }\n    /**\n     * 改变 component2的props\n     *\n     *\n     * @memberOf Component\n     */\n    changeProps() {\n        this.setState({\n            component2: this.state.component2 + 1\n        });\n    }\n    /**\n     * 渲染函数\n     * @returns jsx\n     * @memberOf Component\n     */\n    render() {\n        const { state } = this;\n        return (React.createElement(\"section\", {className: 'page-home'}, \n            React.createElement(\"p\", null, \"点击事件的2种绑定方式\"), \n            React.createElement(\"div\", null, \n                React.createElement(\"a\", {onClick: this.btnClick.bind(this)}, \n                    state.btnText, \n                    \":\", \n                    state.btnNu), \n                \"  \", \n                React.createElement(\"a\", {onClick: () => this.changeProps()}, \"修改Component2属性\")), \n            React.createElement(\"br\", null), \n            React.createElement(\"br\", null), \n            React.createElement(\"br\", null), \n            React.createElement(\"br\", null), \n            React.createElement(Component2, {nu: this.state.component2, type: 'text'})));\n    }\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Component;\n/**\n * Component2 组件\n *\n * @class Component2\n * @extends {React.Component<{\n *     nu: number\n * }, any>}\n */\nclass Component2 extends React.Component {\n    constructor() {\n        super(...arguments);\n        /**\n         * 初始化状态\n         * @memberOf Component2\n         */\n        this.state = {\n            btnNu: this.props.nu\n        };\n    }\n    /**\n     * 点击函数\n     * @memberOf Component2\n     */\n    btnClick() {\n        this.setState({\n            btnNu: this.state.btnNu + 1,\n        });\n    }\n    /**\n     * 接收到新的props或者state后，进行渲染之前调用，此时不允许更新props或state。\n     *\n     *\n     * @memberOf Component2\n     */\n    componentWillMount() {\n        console.log('componentWillMount');\n    }\n    /**\n     * 完成渲染新的props或者state后调用，此时可以访问到新的DOM元素。\n     *\n     *\n     * @memberOf Component2\n     */\n    componentDidMount() {\n        console.log('componentDidMount');\n    }\n    /**\n     * 组件接收到新的props时调用，并将其作为参数nextProps使用，此时可以更改组件props及state。\n     *\n     *\n     * @memberOf Component2\n     */\n    componentWillReceiveProps() {\n        console.log('componentWillReceiveProps');\n    }\n    /**\n     * 组件是否应当渲染新的props或state，返回false表示跳过后续的生命周期方法，通常不需要使用以避免出现bug。在出现应用的瓶颈时，可通过该方法进行适当的优化。\n     *\n     * @returns\n     *\n     * @memberOf Component2\n     */\n    shouldComponentUpdate() {\n        console.log('shouldComponentUpdate');\n        return true;\n    }\n    /**\n     * 销毁&清理期\n     *\n     *\n     * @memberOf Component2\n     */\n    componentWillUnmount() {\n        console.log('componentWillUnmount');\n    }\n    /**\n     * 渲染\n     * @returns jsx\n     * @memberOf Component2\n     */\n    render() {\n        const { state } = this;\n        return React.createElement(\"section\", {className: 'page=home'}, \n            React.createElement(\"p\", null, \"组件的创建和调用  react 生命周期\"), \n            React.createElement(\"div\", null, \n                React.createElement(\"input\", {type: 'text'}), \n                React.createElement(\"a\", {onClick: this.btnClick.bind(this), className: 'ant-btn'}, \n                    React.createElement(\"i\", {className: 'iconfont icon-home white'}), \n                    \"点击:\", \n                    state.btnNu)), \n            React.createElement(\"p\", null, \n                \"props['nu]: \", \n                this.props.nu));\n    }\n}\nexports.Component2 = Component2;",null],"sourceRoot":"/assets"}