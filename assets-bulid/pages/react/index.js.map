{"version":3,"sources":["pages/react/index.js","pages/react/index.tsx"],"names":["React","require","Component","arguments","state","btnNu","btnText","component2","setState","createElement","className","onClick","btnClick","bind","changeProps","Component2","nu","type","PureComponent","Object","defineProperty","exports","value","default","props","console","log"],"mappings":"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","file":"pages/react/index.js","sourcesContent":["\"use strict\";\nconst React = require('react');\n/**\n * react页面默认default 加载组件\n * @class Component\n * @extends {React.Component<any, any>}\n */\nclass Component extends React.PureComponent {\n    constructor() {\n        super(...arguments);\n        /**\n         * 状态\n         * @memberOf Component\n         */\n        this.state = {\n            btnNu: 1,\n            btnText: '点击我',\n            component2: 1\n        };\n    }\n    /**\n     * 点击事件 函数\n     * @memberOf Component\n     */\n    btnClick() {\n        this.setState({\n            btnNu: this.state.btnNu + 1\n        });\n    }\n    /**\n     * 改变 component2的props\n     *\n     *\n     * @memberOf Component\n     */\n    changeProps() {\n        this.setState({\n            component2: this.state.component2 + 1\n        });\n    }\n    /**\n     * 渲染函数\n     * @returns jsx\n     * @memberOf Component\n     */\n    render() {\n        const { state } = this;\n        return (React.createElement(\"section\", {className: 'page-home'}, \n            React.createElement(\"p\", null, \"点击事件的2种绑定方式\"), \n            React.createElement(\"div\", null, \n                React.createElement(\"a\", {onClick: this.btnClick.bind(this)}, \n                    state.btnText, \n                    \":\", \n                    state.btnNu), \n                \"  \", \n                React.createElement(\"a\", {onClick: () => this.changeProps()}, \"修改Component2属性\")), \n            React.createElement(\"br\", null), \n            React.createElement(\"br\", null), \n            React.createElement(\"br\", null), \n            React.createElement(\"br\", null), \n            React.createElement(Component2, {nu: this.state.component2, type: 'text'})));\n    }\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Component;\n/**\n * Component2 组件\n *\n * @class Component2\n * @extends {React.Component<{\n *     nu: number\n * }, any>}\n */\nclass Component2 extends React.PureComponent {\n    constructor() {\n        super(...arguments);\n        /**\n         * 初始化状态\n         * @memberOf Component2\n         */\n        this.state = {\n            btnNu: this.props.nu\n        };\n    }\n    /**\n     * 点击函数\n     * @memberOf Component2\n     */\n    btnClick() {\n        this.setState({\n            btnNu: this.state.btnNu + 1,\n        });\n    }\n    /**\n     * 接收到新的props或者state后，进行渲染之前调用，此时不允许更新props或state。\n     *\n     *\n     * @memberOf Component2\n     */\n    componentWillMount() {\n        console.log('componentWillMount');\n    }\n    /**\n     * 完成渲染新的props或者state后调用，此时可以访问到新的DOM元素。\n     *\n     *\n     * @memberOf Component2\n     */\n    componentDidMount() {\n        console.log('componentDidMount');\n    }\n    /**\n     * 组件接收到新的props时调用，并将其作为参数nextProps使用，此时可以更改组件props及state。\n     *\n     *\n     * @memberOf Component2\n     */\n    componentWillReceiveProps() {\n        console.log('componentWillReceiveProps');\n    }\n    /**\n     * 组件是否应当渲染新的props或state，返回false表示跳过后续的生命周期方法，通常不需要使用以避免出现bug。在出现应用的瓶颈时，可通过该方法进行适当的优化。\n     *\n     * @returns\n     *\n     * @memberOf Component2\n     */\n    ReactCompositeComponent() {\n        console.log('ReactCompositeComponent');\n        return true;\n    }\n    /**\n     * 销毁&清理期\n     *\n     *\n     * @memberOf Component2\n     */\n    componentWillUnmount() {\n        console.log('componentWillUnmount');\n    }\n    /**\n     * 渲染\n     * @returns jsx\n     * @memberOf Component2\n     */\n    render() {\n        const { state } = this;\n        return React.createElement(\"section\", {className: 'page=home'}, \n            React.createElement(\"p\", null, \"组件的创建和调用  react 生命周期\"), \n            React.createElement(\"div\", null, \n                React.createElement(\"input\", {type: 'text'}), \n                React.createElement(\"a\", {onClick: this.btnClick.bind(this), className: 'ant-btn'}, \n                    React.createElement(\"i\", {className: 'iconfont icon-home white'}), \n                    \"点击:\", \n                    state.btnNu)), \n            React.createElement(\"p\", null, \n                \"props['nu]: \", \n                this.props.nu));\n    }\n}\nexports.Component2 = Component2;",null],"sourceRoot":"/assets"}