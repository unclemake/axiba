{"version":3,"sources":["components/validate/rule.tsx"],"names":[],"mappings":"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","file":"../../assets/components/validate/rule.js","sourcesContent":["export let messages = {\r\n    required: () => \"必填！\",\r\n    number: (value, parameter) => `请输入正整数！`,\r\n    min: (value, parameter) => `必须大于等于 ${parameter}`,\r\n    max: (value, parameter) => `必须小于等于 ${parameter}`,\r\n    minLength: (value, parameter) => `长度必须大于等于 ${parameter} (两个英文等于1)`,\r\n    maxLength: (value, parameter) => `长度必须大于等于 ${parameter} (两个英文等于1)`,\r\n    noSymbol: (value, parameter) => `必须是中文或英文,数字`,\r\n    telephone: (value, parameter) => `必须是手机号码`,\r\n}\r\n\r\n/**\r\n * 正则集合\r\n */\r\nexport let regExpArray = {\r\n    get required() { return /[^\\s]/g; },\r\n    get number() { return /^[0-9]\\d*$/g; },\r\n    get noSymbol() { return /^[\\u4E00-\\u9FA50-9a-zA-Z]+$/g; },\r\n    get telephone() { return /^1[34578]\\d{9}$/g; }\r\n}\r\n\r\n/**\r\n * 验证规则集合\r\n */\r\nexport interface RuleFunction {\r\n    (value: string, parameter?: any): boolean\r\n};\r\nexport let ruleArray: { [key: string]: RuleFunction } = {\r\n    min: (value: string, parameter) => parseInt(value) >= parameter,\r\n    max: (value: string, parameter) => parseInt(value) <= parameter,\r\n    minLength: (value: string, parameter) => getLength(value) >= parameter,\r\n    maxLength: (value: string, parameter) => getLength(value) <= parameter,\r\n}\r\n\r\n\r\n\r\n/**\r\n * 替换规则集合\r\n */\r\nexport let replaceArray = {\r\n    number: (value: string) => {\r\n        return value.replace(/[^0-9]/g, \"\").replace(/^0+/g, \"\");\r\n    },\r\n    min: (value: string) => {\r\n        return value.replace(/[^0-9]/g, \"\").replace(/^0+/g, \"\");\r\n    },\r\n    max: (value: string) => {\r\n        return value.replace(/[^0-9]/g, \"\").replace(/^0+/g, \"\");\r\n    }\r\n}\r\n\r\n\r\n\r\nexport interface RuleObj {\r\n    key: string,\r\n    messages: (value: string, parameter) => string,\r\n    regExp?: RegExp,\r\n    rule?: RuleFunction\r\n    replace?: (value: string) => string\r\n}\r\n\r\n\r\n/**\r\n * 添加验证规则\r\n * \r\n * @param {RuleObj} ruleObj\r\n */\r\nexport function addRule(ruleObj: RuleObj) {\r\n    messages[ruleObj.key] = ruleObj.messages;\r\n\r\n    ruleObj.regExp && (regExpArray[ruleObj.key] = ruleObj.rule);\r\n    ruleObj.rule && (ruleArray[ruleObj.key] = ruleObj.rule);\r\n    ruleObj.replace && (replaceArray[ruleObj.key] = ruleObj.replace);\r\n}\r\n\r\n/**\r\n * 默认验证规则 去除前后空格\r\n * \r\n * @param {string} key\r\n * @returns {RuleFunction}\r\n */\r\nexport function replaceDefault(value: string) {\r\n    return value.replace(/(^\\s*)|(\\s*$)/g, \"\");\r\n}\r\n\r\n\r\n/**\r\n * 默认验证规则\r\n * \r\n * @param {string} key\r\n * @returns {RuleFunction}\r\n */\r\nexport function ruleDefault(key: string): RuleFunction {\r\n    return (value) => {\r\n        return regExpArray[key].test(value);\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * 获取字符串长度 中文 = 1 英文 = 0.5\r\n * \r\n * @export\r\n * @param {string} value\r\n * @returns {number}\r\n */\r\nexport function getLength(value: string): number {\r\n    return value.replace(/[^\\x00-\\xff]/g, \"01\").length / 2;\r\n}\r\n"]}